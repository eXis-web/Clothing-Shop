{"version":3,"file":"static/js/147.41491ec8.chunk.js","mappings":"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","sources":["components/button/button.component.tsx","components/button/button.styles.tsx","components/checkout-item/checkout-item.styles.tsx","components/checkout-item/checkout-item.component.tsx","components/payment-form/payment-form.styles.tsx","components/payment-form/payment-form.component.tsx","routes/checkout/checkout.styles.tsx","routes/checkout/checkout.component.tsx","store/cart/cart.selector.ts","store/user/user.selector.ts"],"sourcesContent":["import {\n  BaseButton,\n  GoogleSignInButton,\n  InvertedButton,\n  LoadingSpinner,\n} from \"./button.styles\";\n\nimport { FC, ButtonHTMLAttributes } from \"react\";\n\nexport enum BUTTON_TYPE_CLASSES  {\n  base = \"base\",\n  google = \"google-sign-in\",\n  inverted = \"inverted\",\n};\n\n\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) : typeof BaseButton=>\n  ({\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\n  }[buttonType]);\n\nexport type ButtonProps = {\n  buttonType?: BUTTON_TYPE_CLASSES;\n  isLoading?: boolean;\n} & ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button : FC<ButtonProps> = ({ children, buttonType, isLoading, ...otherProps }) => {\n  const CustomButton = getButton(buttonType);\n  return (\n    <CustomButton disabled={isLoading} {...otherProps}>\n      {isLoading ? <LoadingSpinner /> : children}\n    </CustomButton>\n  );\n};\n\nexport default Button;\n","import styled from \"styled-components\";\n\nexport const BaseButton = styled.button`\n  min-width: 165px;\n  width: auto;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  font-size: 15px;\n  background-color: black;\n  color: white;\n  text-transform: uppercase;\n  font-family: \"Open Sans Condensed\";\n  font-weight: bolder;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n  }\n  \n`;\n\nexport const GoogleSignInButton = styled(BaseButton)`\n  background-color: #4285f4;\n  color: white;\n\n  &:hover {\n    background-color: #357ae8;\n    border: none;\n  }\n\n`;\n\nexport const InvertedButton = styled(BaseButton)`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }\n`;\n\nexport const LoadingSpinner = styled.div`\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CheckoutItemContainer = styled.div`\n  width: 100%;\n  display: flex;\n  min-height: 100px;\n  border-bottom: 1px solid darkgrey;\n  padding: 15px 0;\n  font-size: 20px;\n  align-items: center;\n`;\n\nexport const ImageContainer = styled.div`\n  width: 23%;\n  padding-right: 15px;\n\n  img {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const BaseSpan = styled.span`\n  width: 23%;\n`;\n\nexport const Quantity = styled(BaseSpan)`\n  display: flex;\n`;\n\nexport const Arrow = styled.div`\n  cursor: pointer;\n`;\n\nexport const Value = styled.span`\n  margin: 0 10px;\n`;\n\nexport const RemoveButton = styled.div`\n  padding-left: 12px;\n  cursor: pointer;\n`;","import { FC, memo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { selectCartItems } from '../../store/cart/cart.selector';\nimport {\n    addItemToCart,\n    clearItemFromCart,\n    removeItemFromCart,\n} from '../../store/cart/cart.action';\n\nimport {\n    CheckoutItemContainer,\n    ImageContainer,\n    BaseSpan,\n    Quantity,\n    Arrow,\n    Value,\n    RemoveButton,\n} from './checkout-item.styles';\n\nimport { CartItem } from '../../store/cart/cart.types';\n\ntype CheckoutItemProps = {\n    cartItem: CartItem;\n};\n\nconst CheckoutItem: FC<CheckoutItemProps> = memo(({ cartItem }) => {\n    const { name, imageUrl, price, quantity } = cartItem;\n    const cartItems = useSelector(selectCartItems);\n    const dispatch = useDispatch();\n\n    const clearItemHandler = () =>\n        dispatch(clearItemFromCart(cartItems, cartItem));\n    const addItemHandler = () => dispatch(addItemToCart(cartItems, cartItem));\n    const removeItemHandler = () =>\n        dispatch(removeItemFromCart(cartItems, cartItem));\n\n    return (\n        <CheckoutItemContainer>\n        <ImageContainer>\n            <img src={imageUrl} alt={`${name}`} />\n        </ImageContainer>\n        <BaseSpan> {name} </BaseSpan>\n        <Quantity>\n            <Arrow onClick={removeItemHandler}>&#10094;</Arrow>\n            <Value>{quantity}</Value>\n            <Arrow onClick={addItemHandler}>&#10095;</Arrow>\n        </Quantity>\n        <BaseSpan> {price}</BaseSpan>\n        <RemoveButton onClick={clearItemHandler}>&#10005;</RemoveButton>\n        </CheckoutItemContainer>\n    );\n    });\n\nexport default CheckoutItem;","import styled from 'styled-components';\n\nimport Button from '../button/button.component';\n\nexport const PaymentFormContainer = styled.div`\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n    @media screen and (max-width: 800px) {\n      width: 360px;\n    }\n`;\n\nexport const FormContainer = styled.form`\n  height: 100px;\n  min-width: 500px;\n\n  @media screen and (max-width: 800px) {\n    min-width: 360px;\n    \n  }\n`;\n\nexport const PaymentButton = styled(Button)`\n  margin-left: auto;\n  margin-top: 30px;\n`;\n","import { useState, FormEvent } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { useSelector } from 'react-redux';\nimport { StripeCardElement } from '@stripe/stripe-js';\nimport { selectCartTotal } from '../../store/cart/cart.selector.ts';\nimport { selectCurrentUser } from '../../store/user/user.selector.ts';\n\nimport { BUTTON_TYPE_CLASSES } from '../button/button.component.tsx';\n\nimport { PaymentButton, PaymentFormContainer,FormContainer } from './payment-form.styles.tsx';\n\nconst ifValidCardElement = ( card: StripeCardElement | null ): card is StripeCardElement => card !== null;\n\nconst PaymentForm = () => {\n    const stripe = useStripe();\n    const elements = useElements();\n    const amount = useSelector(selectCartTotal);\n    const currentUser = useSelector(selectCurrentUser);\n    const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n\n    const paymentHandler = async (e : FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        if (!stripe || !elements) {\n            return;\n        }\n        setIsProcessingPayment(true);\n        const response = await fetch('/.netlify/functions/create-payment-intent', {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ amount: amount * 100 }),\n        }).then((res) => {\n            return res.json();\n        });\n\n        const clientSecret = response.paymentIntent.client_secret;\n\n        const cardDetails = elements.getElement(CardElement);\n\n        if(!ifValidCardElement(cardDetails)) return;\n\n        const paymentResult = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: cardDetails,\n                billing_details: {\n                    name: currentUser ? currentUser.displayName : 'Yihua Zhang',\n                },\n            },\n        });\n\n        setIsProcessingPayment(false);\n\n        if (paymentResult.error) {\n            alert(paymentResult.error.message);\n        } else {\n            if (paymentResult.paymentIntent.status === 'succeeded') {\n                alert('Payment Successful!');\n            }\n        }\n    };\n\n    return (\n        <PaymentFormContainer>\n            <FormContainer onSubmit={paymentHandler}>\n                <h2>Credit Card Payment:</h2>\n                <CardElement />\n                <PaymentButton\n                    buttonType={BUTTON_TYPE_CLASSES.inverted}\n                    isLoading={isProcessingPayment}\n                >\n                    Pay Now\n                </PaymentButton>\n            </FormContainer>\n        </PaymentFormContainer>\n    );\n};\nexport default PaymentForm;\n","import styled from 'styled-components';\n\nexport const CheckoutContainer = styled.div`\n  width: 55%;\n  min-height: 90vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 50px auto 0;\n  @media screen and (max-width: 800px) {\n      width: 90%;\n  }\n`;\n\nexport const CheckoutHeader = styled.div`\n  width: 100%;\n  padding: 10px 0;\n  display: flex;\n  justify-content: space-between;\n  border-bottom: 1px solid darkgrey;\n`;\n\nexport const HeaderBlock = styled.div`\n  text-transform: capitalize;\n  width: 23%;\n\n  &:last-child {\n    width: 8%;\n  }\n`;\n\nexport const Total = styled.span`\n  margin-top: 30px;\n  margin-left: auto;\n  font-size: 36px;\n`;","import { useSelector } from 'react-redux';\n\nimport {\n    selectCartItems,\n    selectCartTotal,\n} from '../../store/cart/cart.selector';\n\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\nimport PaymentForm from '../../components/payment-form/payment-form.component';\n\nimport {\n    CheckoutContainer,\n    CheckoutHeader,\n    HeaderBlock,\n    Total,\n} from './checkout.styles';\n\nconst Checkout = () => {\n    const cartItems = useSelector(selectCartItems);\n    const cartTotal = useSelector(selectCartTotal);\n\n    return (\n        <CheckoutContainer>\n        <CheckoutHeader>\n            <HeaderBlock>\n            <span>Product</span>\n            </HeaderBlock>\n            <HeaderBlock>\n            <span>Description</span>\n            </HeaderBlock>\n            <HeaderBlock>\n            <span>Quantity</span>\n            </HeaderBlock>\n            <HeaderBlock>\n            <span>Price</span>\n            </HeaderBlock>\n            <HeaderBlock>\n            <span>Remove</span>\n            </HeaderBlock>\n        </CheckoutHeader>\n        {cartItems.map((cartItem) => (\n            <CheckoutItem key={cartItem.id} cartItem={cartItem} />\n        ))}\n        <Total>Total: ${cartTotal}</Total>\n        <PaymentForm />\n        </CheckoutContainer>\n    );\n};\n\nexport default Checkout;","import { createSelector } from \"reselect\";\nimport { CartState } from \"./cart.reducer\";\nimport { RootState } from \"../../store/store\";\n\nconst selectCartReducer = (state: RootState): CartState => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCartReducer],\n    (cart) => cart.cartItems\n);\n\nexport const selectIsCartOpen = createSelector(\n    [selectCartReducer],\n    (cart) => cart.isCartOpen\n);\n\nexport const selectIsDropdownVisible = createSelector(\n    [selectIsCartOpen],\n    (isCartOpen) => isCartOpen\n);\n\nexport const selectCartCount = createSelector([selectCartItems], (cartItems) =>\n    cartItems.reduce(\n        (total, cartItem) => total + cartItem.quantity,\n        0\n    )\n);\n\nexport const selectCartTotal = createSelector([selectCartItems], (cartItems) =>\n    cartItems.reduce(\n        (total, cartItem) => total + cartItem.quantity * cartItem.price,\n        0\n    )\n);\n","import { createSelector } from \"reselect\";\nimport { UserState } from \"./user.reducer\";\nimport { RootState } from \"../../store/store\";\n\n\nexport const selectUserReducer = (state: RootState) : UserState => state.user;\n\nexport const selectCurrentUser = createSelector(\n    selectUserReducer,\n    (user) => user.currentUser);\n"],"names":["BUTTON_TYPE_CLASSES","_ref","children","buttonType","isLoading","otherProps","_objectWithoutProperties","_excluded","CustomButton","_BUTTON_TYPE_CLASSES$","arguments","length","undefined","base","_defineProperty","BaseButton","google","GoogleSignInButton","inverted","InvertedButton","getButton","_jsx","_objectSpread","disabled","LoadingSpinner","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","CheckoutItemContainer","ImageContainer","BaseSpan","Quantity","Arrow","_templateObject5","Value","_templateObject6","RemoveButton","_templateObject7","memo","cartItem","name","imageUrl","price","quantity","cartItems","useSelector","selectCartItems","dispatch","useDispatch","_jsxs","src","alt","concat","onClick","removeItemFromCart","addItemToCart","clearItemFromCart","PaymentFormContainer","FormContainer","PaymentButton","Button","stripe","useStripe","elements","useElements","amount","selectCartTotal","currentUser","selectCurrentUser","_useState","useState","_useState2","_slicedToArray","isProcessingPayment","setIsProcessingPayment","paymentHandler","_asyncToGenerator","_regeneratorRuntime","_callee","e","response","clientSecret","cardDetails","paymentResult","_context","prev","next","preventDefault","abrupt","fetch","method","headers","body","JSON","stringify","then","res","json","sent","paymentIntent","client_secret","getElement","CardElement","confirmCardPayment","payment_method","card","billing_details","displayName","error","alert","message","status","stop","_x","apply","onSubmit","CheckoutContainer","CheckoutHeader","HeaderBlock","Total","cartTotal","map","CheckoutItem","id","PaymentForm","selectCartReducer","state","cart","createSelector","selectIsCartOpen","isCartOpen","selectCartCount","reduce","total","user"],"sourceRoot":""}
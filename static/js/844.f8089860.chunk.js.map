{"version":3,"file":"static/js/844.f8089860.chunk.js","mappings":"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","sources":["components/button/button.component.tsx","components/button/button.styles.tsx","store/categories/category.selector.ts","components/product-card/product-card.styles.tsx","components/product-card/product-card.component.tsx","components/category-preview/category-preview.styles.tsx","components/category-preview/category-preview.component.tsx","routes/categories-preview/categories-preview.components.tsx","routes/category/category.styles.tsx","routes/category/category.component.tsx","routes/shop/shop.component.tsx","store/cart/cart.selector.ts"],"sourcesContent":["import {\n  BaseButton,\n  GoogleSignInButton,\n  InvertedButton,\n  LoadingSpinner,\n} from \"./button.styles\";\n\nimport { FC, ButtonHTMLAttributes } from \"react\";\n\nexport enum BUTTON_TYPE_CLASSES  {\n  base = \"base\",\n  google = \"google-sign-in\",\n  inverted = \"inverted\",\n};\n\n\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base) : typeof BaseButton=>\n  ({\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\n  }[buttonType]);\n\nexport type ButtonProps = {\n  buttonType?: BUTTON_TYPE_CLASSES;\n  isLoading?: boolean;\n} & ButtonHTMLAttributes<HTMLButtonElement>;\n\nconst Button : FC<ButtonProps> = ({ children, buttonType, isLoading, ...otherProps }) => {\n  const CustomButton = getButton(buttonType);\n  return (\n    <CustomButton disabled={isLoading} {...otherProps}>\n      {isLoading ? <LoadingSpinner /> : children}\n    </CustomButton>\n  );\n};\n\nexport default Button;\n","import styled from \"styled-components\";\n\nexport const BaseButton = styled.button`\n  min-width: 165px;\n  width: auto;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  font-size: 15px;\n  background-color: black;\n  color: white;\n  text-transform: uppercase;\n  font-family: \"Open Sans Condensed\";\n  font-weight: bolder;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n  }\n  \n`;\n\nexport const GoogleSignInButton = styled(BaseButton)`\n  background-color: #4285f4;\n  color: white;\n\n  &:hover {\n    background-color: #357ae8;\n    border: none;\n  }\n\n`;\n\nexport const InvertedButton = styled(BaseButton)`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }\n`;\n\nexport const LoadingSpinner = styled.div`\n  display: inline-block;\n  width: 30px;\n  height: 30px;\n  border: 3px solid rgba(195, 195, 195, 0.6);\n  border-radius: 50%;\n  border-top-color: #636767;\n  animation: spin 1s ease-in-out infinite;\n  -webkit-animation: spin 1s ease-in-out infinite;\n  @keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n  @-webkit-keyframes spin {\n    to {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n`;\n","import { createSelector } from \"reselect\";\nimport { CategoryMap } from \"./category.types\";\nimport { CategoriesState } from \"./category.reducer\";\nimport { RootState } from \"../../store/store\";\n\nconst selectCategoryReducer = (state: RootState): CategoriesState => state.categories;\n\nexport const selectCategories = createSelector(\n    [selectCategoryReducer],\n    (categoriesSlice) => categoriesSlice.categories\n);\n\nexport const selectCategoriesMap = createSelector(\n    [selectCategories],\n    (categories): CategoryMap => categories.reduce((acc, category) => {\n        const { title, items } = category;\n        acc[title.toLowerCase()] = items;\n        return acc; \n    }, {} as CategoryMap)\n);\n\nexport const selectCategoriesIsLoading = createSelector(\n    [selectCategoryReducer],\n    (categoriesSlice) => categoriesSlice.isLoading\n);","import styled from 'styled-components';\n\nexport const ProductCartContainer = styled.div`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    height: 350px;\n    align-items: center;\n    position: relative;\n\nimg {\n    width: 100%;\n    height: 95%;\n    object-fit: cover;\n    margin-bottom: 5px;\n}\n\nbutton {\n    width: 80%;\n    opacity: 0.7;\n    position: absolute;\n    top: 255px;\n    display: none;\n}\n\n&:hover {\n    img {\n        opacity: 0.8;\n    }\n\n    button {\n        opacity: 0.85;\n        display: flex;\n    }\n}\n    @media screen and (max-width: 800px) {\n        width: 40vw;\n        button {\n            display: block;\n            opacity: 0.9;\n            min-width: unset;\n            padding: 0 10px;\n            &:hover {\n                img{\n                    opacity: unset;\n                }\n                button {\n                    opacity: unset;\n                }\n            }\n        }\n    }\n\n    @media screen and (max-width: 400px) {\n        width: 80vw;\n    }\n`;\n\nexport const Footer = styled.div`\n    width: 100%;\n    height: 5%;\n    display: flex;\n    justify-content: space-between;\n    font-size: 18px;\n`;\n\nexport const Name = styled.span`\n    width: 90%;\n    margin-bottom: 15px;\n`;\n\nexport const Price = styled.span`\n    width: 10%;\n`;","import { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { selectCartItems } from '../../store/cart/cart.selector';\nimport { addItemToCart } from '../../store/cart/cart.action';\nimport { CategoryItem } from '../../store/categories/category.types';\n\nimport Button, { BUTTON_TYPE_CLASSES } from '../button/button.component';\n\nimport {\n  ProductCartContainer,\n  Footer,\n  Name,\n  Price,\n} from './product-card.styles';\n\ntype ProductCardProps = {\n  product: CategoryItem;\n};\n\nconst ProductCard: FC<ProductCardProps> = ({ product }) => {\n  const { name, price, imageUrl } = product;\n  const dispatch = useDispatch();\n  const cartItems = useSelector(selectCartItems);\n\n  const addProductToCart = () => dispatch(addItemToCart(cartItems, product));\n\n  return (\n    <ProductCartContainer>\n      <img src={imageUrl} alt={`${name}`} />\n      <Footer>\n        <Name>{name}</Name>\n        <Price>{price}</Price>\n      </Footer>\n      <Button\n        buttonType={BUTTON_TYPE_CLASSES.inverted}\n        onClick={addProductToCart}\n      >\n        Add to card\n      </Button>\n    </ProductCartContainer>\n  );\n};\n\nexport default ProductCard;","import styled from 'styled-components';\n\nimport { Link } from 'react-router-dom';\n\nexport const CategoryPreviewContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 30px;\n    @media screen and (max-width: 800px) {\n        align-items: center;\n\n    }\n`;\n\nexport const Title = styled(Link)`\n    font-size: 28px;\n    margin-bottom: 25px;\n    cursor: pointer;\n`;\n\nexport const Preview = styled.div`\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    column-gap: 20px;\n\n    @media screen and (max-width: 800px) {\n        grid-template-columns: 1fr 1fr;\n        grid-column-gap: 15px;\n        grid-row-gap: 25px;\n    }\n    @media screen and (max-width: 400px) {\n        grid-template-columns: 1fr;\n        grid-row-gap: 25px;\n    }\n`;","import { FC } from 'react';\n\nimport ProductCard from '../product-card/product-card.component';\n\nimport {\n    CategoryPreviewContainer,\n    Title,\n    Preview,\n} from './category-preview.styles';\n\nimport { CategoryItem } from '../../store/categories/category.types';\n\ntype CategoryPreviewProps = {\n    title: string;\n    products: CategoryItem[];\n};\n\nconst CategoryPreview: FC<CategoryPreviewProps> = ({ title, products }) => {\n    return (\n        <CategoryPreviewContainer>\n            <h2>\n                <Title to={title}>{title.toUpperCase()}</Title>\n            </h2>\n            <Preview>\n                {products\n                    .filter((_, idx) => idx < 4)\n                    .map((product) => (\n                        <ProductCard key={product.id} product={product} />\n                    ))}\n            </Preview>\n        </CategoryPreviewContainer>\n    );\n};\n\nexport default CategoryPreview;","import { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport {\n    selectCategoriesMap,\n    selectCategoriesIsLoading,\n} from '../../store/categories/category.selector';\n\nimport CategoryPreview from '../../components/category-preview/category-preview.component';\nimport Spinner from '../../components/spinner/spinner.component';\n\nconst CategoriesPreview = () => {\n    const categoriesMap = useSelector(selectCategoriesMap);\n    const isLoading = useSelector(selectCategoriesIsLoading);\n\n    return (\n        <Fragment>\n        {isLoading ? (\n            <Spinner />\n        ) : (\n            Object.keys(categoriesMap).map((title) => {\n            const products = categoriesMap[title];\n            return (\n                <CategoryPreview key={title} title={title} products={products} />\n            );\n            })\n        )}\n        </Fragment>\n    );\n};\n\nexport default CategoriesPreview;","import styled from 'styled-components';\n\nexport const CategoryContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  column-gap: 20px;\n  row-gap: 50px;\n      @media screen and (max-width: 800px) {\n        grid-template-columns: 1fr 1fr;\n        grid-column-gap: 15px;\n        grid-row-gap: 25px;\n    }\n    @media screen and (max-width: 400px) {\n        grid-template-columns: 1fr;\n        grid-row-gap: 25px;\n    }\n`;\n\nexport const Title = styled.h2`\n  font-size: 38px;\n  margin-bottom: 25px;\n  text-align: center;\n`;","import ProductCard from '../../components/product-card/product-card.component.tsx';\nimport { useState, useEffect, Fragment } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { CategoryContainer,Title} from './category.styles.tsx';\nimport { selectCategoriesIsLoading, selectCategoriesMap } from '../../store/categories/category.selector.ts';\nimport Spinner from '../../components/spinner/spinner.component.jsx';\n\ntype CategoryRouteParams = {\n    category: string;\n}\n\nconst Category = () => {\n    const { category } = useParams<\n        keyof CategoryRouteParams\n    >() as CategoryRouteParams;\n    const categoriesMap = useSelector(selectCategoriesMap);\n    const isLoading = useSelector(selectCategoriesIsLoading);\n    const [products, setProducts] = useState(categoriesMap[category]);\n\n    useEffect(() => {\n        setProducts(categoriesMap[category]);\n    }, [category, categoriesMap]);\n\n    return (\n        <Fragment>\n            <Title>{category.toUpperCase()}</Title>\n            {isLoading ?\n                (<Spinner />\n            ) : (\n                <CategoryContainer>\n                    {products &&\n                        products.map((product) => (\n                            <ProductCard key={product.id} product={product} />\n                        ))}\n                </CategoryContainer>\n            )}\n        </Fragment>\n    );\n};\n\nexport default Category;","import { useEffect } from 'react';\nimport { Routes, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport CategoriesPreview from '../categories-preview/categories-preview.components.tsx';\nimport Category from '../category/category.component.tsx';\nimport { fetchCategoriesStart } from '../../store/categories/category.action.ts';\n\nconst Shop = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n            dispatch(fetchCategoriesStart());\n    }, [dispatch]);\n\n    return (\n        <Routes>\n            <Route index element={<CategoriesPreview />} />\n            <Route path=':category' element={<Category />} />\n        </Routes>\n    );\n};\n\nexport default Shop;","import { createSelector } from \"reselect\";\nimport { CartState } from \"./cart.reducer\";\nimport { RootState } from \"../../store/store\";\n\nconst selectCartReducer = (state: RootState): CartState => state.cart;\n\nexport const selectCartItems = createSelector(\n    [selectCartReducer],\n    (cart) => cart.cartItems\n);\n\nexport const selectIsCartOpen = createSelector(\n    [selectCartReducer],\n    (cart) => cart.isCartOpen\n);\n\nexport const selectIsDropdownVisible = createSelector(\n    [selectIsCartOpen],\n    (isCartOpen) => isCartOpen\n);\n\nexport const selectCartCount = createSelector([selectCartItems], (cartItems) =>\n    cartItems.reduce(\n        (total, cartItem) => total + cartItem.quantity,\n        0\n    )\n);\n\nexport const selectCartTotal = createSelector([selectCartItems], (cartItems) =>\n    cartItems.reduce(\n        (total, cartItem) => total + cartItem.quantity * cartItem.price,\n        0\n    )\n);\n"],"names":["BUTTON_TYPE_CLASSES","_ref","children","buttonType","isLoading","otherProps","_objectWithoutProperties","_excluded","CustomButton","_BUTTON_TYPE_CLASSES$","arguments","length","undefined","base","_defineProperty","BaseButton","google","GoogleSignInButton","inverted","InvertedButton","getButton","_jsx","_objectSpread","disabled","LoadingSpinner","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","_templateObject4","selectCategoryReducer","state","categories","selectCategories","createSelector","categoriesSlice","selectCategoriesMap","reduce","acc","category","title","items","toLowerCase","selectCategoriesIsLoading","ProductCartContainer","Footer","Name","Price","product","name","price","imageUrl","dispatch","useDispatch","cartItems","useSelector","selectCartItems","_jsxs","src","alt","concat","Button","onClick","addItemToCart","CategoryPreviewContainer","Title","Link","Preview","products","to","toUpperCase","filter","_","idx","map","ProductCard","id","categoriesMap","Fragment","Spinner","Object","keys","CategoryPreview","CategoryContainer","useParams","_useState","useState","_useState2","_slicedToArray","setProducts","useEffect","fetchCategoriesStart","Routes","Route","index","element","CategoriesPreview","path","Category","selectCartReducer","cart","selectIsCartOpen","isCartOpen","selectCartCount","total","cartItem","quantity","selectCartTotal"],"sourceRoot":""}